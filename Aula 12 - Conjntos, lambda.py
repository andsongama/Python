# -*- coding: utf-8 -*-
"""Olá, este é o Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

# 1 - Função lambda que retorna o dobro de um número

dobro = lambda x: x * 2
print(dobro(10))

# 2 - Função lambda que calcula a soma de dois números
soma = lambda x, y: x + y
print(soma(10,20))

# 3 - Função lambda que verifica se um número é par
eh_par = lambda x: x % 2 == 0
print(eh_par(11))

# 4 - Função lambda que converte uma string em maiúsculas
maiusculas = lambda s: s.upper()
print(maiusculas(s))

# 5 - Função lambda que calcula o produto de três números
produto = lambda x, y, z: x * y * z
print(produto(1,10,12))

#Comparação entre conjuntos
conjunto2 = {12,52,63,1,3,5}
conjunto3 = {12,63,5,2}
#tem no conjunto2 e não tem no conjunto3
print(conjunto2.difference(conjunto3))
#tem no conjunto3 e não tem no conjunto2
print(conjunto3.difference(conjunto2))

#Retirar um elemento de um conjunto
conjunto6 = {1,6,8,9}
conjunto6.discard(6)
print(conjunto6)

#Exercicios aula 12
#2: Una estes 2 conjuntos:

zone = {1, 2, 3, 4}
kwia = {3, 4, 5, 6}
uniao = zone.union(kwia)
print(uniao)

#Exercicios aula 12
#3: Verifique a diferença entre os conjuntos:

#Tem no g1, não tem no g2
g1 = {12,3569,1,5,7}
g2 = {12,3569,2,5,8}
diferenca = g1.difference(g2)
print(diferenca)

#Tem no g2, não tem no g1
g1 = {12,3569,1,5,7}
g2 = {12,3569,2,5,8}
diferenca1 = g2.difference(g1)
print(diferenca1)

#4: Crie um conjunto chamado "frutas" com as seguintes frutas: maçã, banana,
#laranja, pêra e abacaxi. Em seguida, imprima o número de elementos no conjunto.

frutas = {'maça', 'banana', 'laranja', 'pêra','abacaxi'}
print(len(frutas))

#5: Crie dois conjuntos, "conjunto1" e "conjunto2", com alguns números inteiros.
#Imprima a união desses dois conjuntos

conjunto = {1,2,3,4,5}
conjunto2 = {6,7,8,9,10}
uniao = conjunto.union(conjunto2)
print(uniao)

#6: Dado o conjunto "cores" com cores diferentes, remova a cor "vermelho" do conjunto.

cores = {'azul', 'amarelo', 'vermelho', 'rosa', 'verde', 'preto'}
cores.discard('vermelho')
print(cores)

#7: Crie um conjunto chamado "numeros" com os números de 1 a 10.
#Em seguida, crie um novo conjunto chamado "pares" contendo apenas os números pares
#do conjunto "numeros".

numeros = set([1, 2, 3, 4, 5,6,7,8,9,10])
pares = list(filter(lambda x: x % 2 == 0, numeros))
print(pares)

#8: Verifique se o conjunto "alunos_aprovados" contém todos os alunos do
#conjunto "todos_alunos". Os conjuntos devem ser definidos com nomes apropriados.

todos_alunos = set({'Andson', 'Pedro', 'Fernando', 'Gustavo', 'Luiz'})
alunos_aprovados = set({'Andson', 'Pedro', 'Fernando', 'Gustavo', 'Luiz'})

if len(todos_alunos) == len(alunos_aprovados):
  print("Verdadeiro")
  elif:
   print("Falso")